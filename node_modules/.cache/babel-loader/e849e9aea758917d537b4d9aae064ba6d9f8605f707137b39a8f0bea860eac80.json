{"ast":null,"code":"// src/errors/errorThrower.ts\nimport { buildErrorThrower } from \"@clerk/shared/error\";\nvar errorThrower = buildErrorThrower({\n  packageName: \"@clerk/clerk-react\"\n});\nfunction setErrorThrowerOptions(options) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n\n// src/hooks/useAuth.ts\nimport { createCheckAuthorization } from \"@clerk/shared/authorization\";\nimport { useCallback, useEffect, useState } from \"react\";\n\n// src/contexts/AuthContext.ts\nimport { createContextAndHook } from \"@clerk/shared/react\";\nvar [AuthContext, useAuthContext] = createContextAndHook(\"AuthContext\");\n\n// src/contexts/IsomorphicClerkContext.tsx\nimport { ClerkInstanceContext, useClerkInstanceContext } from \"@clerk/shared/react\";\nvar IsomorphicClerkContext = ClerkInstanceContext;\nvar useIsomorphicClerkContext = useClerkInstanceContext;\n\n// src/errors/messages.ts\nvar multipleClerkProvidersError = \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\nvar multipleChildrenInButtonComponent = name => `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\nvar invalidStateError = \"Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support\";\nvar unsupportedNonBrowserDomainOrProxyUrlFunction = \"Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.\";\nvar userProfilePageRenderedError = \"<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar userProfileLinkRenderedError = \"<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar organizationProfilePageRenderedError = \"<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar organizationProfileLinkRenderedError = \"<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar customPagesIgnoredComponent = componentName => `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\nvar customPageWrongProps = componentName => `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\nvar customLinkWrongProps = componentName => `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\nvar noPathProvidedError = componentName => `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\nvar incompatibleRoutingWithPathProvidedError = componentName => `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\nvar userButtonIgnoredComponent = `<UserButton /> can only accept <UserButton.UserProfilePage />, <UserButton.UserProfileLink /> and <UserButton.MenuItems /> as its children. Any other provided component will be ignored.`;\nvar customMenuItemsIgnoredComponent = \"<UserButton.MenuItems /> component can only accept <UserButton.Action /> and <UserButton.Link /> as its children. Any other provided component will be ignored.\";\nvar userButtonMenuItemsRenderedError = \"<UserButton.MenuItems /> component needs to be a direct child of `<UserButton />`.\";\nvar userButtonMenuActionRenderedError = \"<UserButton.Action /> component needs to be a direct child of `<UserButton.MenuItems />`.\";\nvar userButtonMenuLinkRenderedError = \"<UserButton.Link /> component needs to be a direct child of `<UserButton.MenuItems />`.\";\nvar userButtonMenuItemLinkWrongProps = \"Missing props. <UserButton.Link /> component requires the following props: href, label and labelIcon.\";\nvar userButtonMenuItemsActionWrongsProps = \"Missing props. <UserButton.Action /> component requires the following props: label.\";\n\n// src/hooks/useAssertWrappedByClerkProvider.ts\nimport { useAssertWrappedByClerkProvider as useSharedAssertWrappedByClerkProvider } from \"@clerk/shared/react\";\nvar useAssertWrappedByClerkProvider = source => {\n  useSharedAssertWrappedByClerkProvider(() => {\n    errorThrower.throwMissingClerkProviderError({\n      source\n    });\n  });\n};\n\n// src/hooks/utils.ts\nvar clerkLoaded = isomorphicClerk => {\n  return new Promise(resolve => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\nvar createGetToken = isomorphicClerk => {\n  return async options => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\nvar createSignOut = isomorphicClerk => {\n  return async (...args) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n\n// src/hooks/useAuth.ts\nvar useAuth = (initialAuthState = {}) => {\n  useAssertWrappedByClerkProvider(\"useAuth\");\n  const authContext = useAuthContext();\n  const [authState, setAuthState] = useState(() => {\n    if (authContext.sessionId === void 0 && authContext.userId === void 0) {\n      return initialAuthState != null ? initialAuthState : {};\n    }\n    return authContext;\n  });\n  useEffect(() => {\n    if (authContext.sessionId === void 0 && authContext.userId === void 0) {\n      return;\n    }\n    setAuthState(authContext);\n  }, [authContext]);\n  const {\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    __experimental_factorVerificationAge\n  } = authState;\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const getToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n  const has = useCallback(params => {\n    return createCheckAuthorization({\n      userId,\n      orgId,\n      orgRole,\n      orgPermissions,\n      __experimental_factorVerificationAge\n    })(params);\n  }, [userId, __experimental_factorVerificationAge, orgId, orgRole, orgPermissions]);\n  return useDerivedAuth({\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgSlug,\n    orgRole,\n    getToken,\n    signOut,\n    has\n  });\n};\nfunction useDerivedAuth(authObject) {\n  const {\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgSlug,\n    orgRole,\n    has,\n    signOut,\n    getToken\n  } = authObject != null ? authObject : {};\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      has: void 0,\n      signOut,\n      getToken\n    };\n  }\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  return errorThrower.throw(invalidStateError);\n}\n\n// src/hooks/useEmailLink.ts\nimport React from \"react\";\nfunction useEmailLink(resource) {\n  const {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  };\n}\n\n// src/hooks/useSignIn.ts\nimport { useClientContext } from \"@clerk/shared/react\";\nimport { eventMethodCalled } from \"@clerk/shared/telemetry\";\nvar useSignIn = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignIn\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record(eventMethodCalled(\"useSignIn\"));\n  if (!client) {\n    return {\n      isLoaded: false,\n      signIn: void 0,\n      setActive: void 0\n    };\n  }\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/useSignUp.ts\nimport { useClientContext as useClientContext2 } from \"@clerk/shared/react\";\nimport { eventMethodCalled as eventMethodCalled2 } from \"@clerk/shared/telemetry\";\nvar useSignUp = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignUp\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext2();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record(eventMethodCalled2(\"useSignUp\"));\n  if (!client) {\n    return {\n      isLoaded: false,\n      signUp: void 0,\n      setActive: void 0\n    };\n  }\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/index.ts\nimport { useClerk, useOrganization, useOrganizationList, useSessionList, useUser, useSession } from \"@clerk/shared/react\";\n\n// src/components/controlComponents.tsx\nimport React3 from \"react\";\n\n// src/contexts/SessionContext.tsx\nimport { SessionContext, useSessionContext } from \"@clerk/shared/react\";\n\n// src/components/withClerk.tsx\nimport React2 from \"react\";\nvar withClerk = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  const HOC = props => {\n    useAssertWrappedByClerkProvider(displayName || \"withClerk\");\n    const clerk = useIsomorphicClerkContext();\n    if (!clerk.loaded) {\n      return null;\n    }\n    return /* @__PURE__ */React2.createElement(Component, {\n      ...props,\n      clerk\n    });\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\n// src/components/controlComponents.tsx\nvar SignedIn = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"SignedIn\");\n  const {\n    userId\n  } = useAuthContext();\n  if (userId) {\n    return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n  }\n  return null;\n};\nvar SignedOut = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"SignedOut\");\n  const {\n    userId\n  } = useAuthContext();\n  if (userId === null) {\n    return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n  }\n  return null;\n};\nvar ClerkLoaded = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoaded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n};\nvar ClerkLoading = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoading\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n};\nvar Protect = ({\n  children,\n  fallback,\n  ...restAuthorizedParams\n}) => {\n  useAssertWrappedByClerkProvider(\"Protect\");\n  const {\n    isLoaded,\n    has,\n    userId\n  } = useAuth();\n  if (!isLoaded) {\n    return null;\n  }\n  const unauthorized = /* @__PURE__ */React3.createElement(React3.Fragment, null, fallback != null ? fallback : null);\n  const authorized = /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nvar RedirectToSignIn = withClerk(({\n  clerk,\n  ...props\n}) => {\n  const {\n    client,\n    session\n  } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  React3.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(({\n  clerk,\n  ...props\n}) => {\n  React3.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToUserProfile = withClerk(({\n  clerk\n}) => {\n  React3.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(({\n  clerk\n}) => {\n  React3.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(({\n  clerk\n}) => {\n  React3.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(({\n  clerk,\n  ...handleRedirectCallbackParams\n}) => {\n  React3.useEffect(() => {\n    void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n  }, []);\n  return null;\n}, \"AuthenticateWithRedirectCallback\");\nvar MultisessionAppSupport = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"MultisessionAppSupport\");\n  const session = useSessionContext();\n  return /* @__PURE__ */React3.createElement(React3.Fragment, {\n    key: session ? session.id : \"no-users\"\n  }, children);\n};\nexport { errorThrower, setErrorThrowerOptions, multipleClerkProvidersError, multipleChildrenInButtonComponent, unsupportedNonBrowserDomainOrProxyUrlFunction, userProfilePageRenderedError, userProfileLinkRenderedError, organizationProfilePageRenderedError, organizationProfileLinkRenderedError, customPagesIgnoredComponent, customPageWrongProps, customLinkWrongProps, noPathProvidedError, incompatibleRoutingWithPathProvidedError, userButtonIgnoredComponent, customMenuItemsIgnoredComponent, userButtonMenuItemsRenderedError, userButtonMenuActionRenderedError, userButtonMenuLinkRenderedError, userButtonMenuItemLinkWrongProps, userButtonMenuItemsActionWrongsProps, IsomorphicClerkContext, withClerk, AuthContext, useAuth, useDerivedAuth, useEmailLink, useSignIn, useSignUp, useClerk, useOrganization, useOrganizationList, useSessionList, useUser, useSession, SignedIn, SignedOut, ClerkLoaded, ClerkLoading, Protect, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, RedirectToOrganizationProfile, RedirectToCreateOrganization, AuthenticateWithRedirectCallback, MultisessionAppSupport };","map":{"version":3,"names":["buildErrorThrower","errorThrower","packageName","setErrorThrowerOptions","options","setMessages","setPackageName","createCheckAuthorization","useCallback","useEffect","useState","createContextAndHook","AuthContext","useAuthContext","ClerkInstanceContext","useClerkInstanceContext","IsomorphicClerkContext","useIsomorphicClerkContext","multipleClerkProvidersError","multipleChildrenInButtonComponent","name","invalidStateError","unsupportedNonBrowserDomainOrProxyUrlFunction","userProfilePageRenderedError","userProfileLinkRenderedError","organizationProfilePageRenderedError","organizationProfileLinkRenderedError","customPagesIgnoredComponent","componentName","customPageWrongProps","customLinkWrongProps","noPathProvidedError","incompatibleRoutingWithPathProvidedError","userButtonIgnoredComponent","customMenuItemsIgnoredComponent","userButtonMenuItemsRenderedError","userButtonMenuActionRenderedError","userButtonMenuLinkRenderedError","userButtonMenuItemLinkWrongProps","userButtonMenuItemsActionWrongsProps","useAssertWrappedByClerkProvider","useSharedAssertWrappedByClerkProvider","source","throwMissingClerkProviderError","clerkLoaded","isomorphicClerk","Promise","resolve","loaded","addOnLoaded","createGetToken","session","getToken","createSignOut","args","signOut","useAuth","initialAuthState","authContext","authState","setAuthState","sessionId","userId","actor","orgId","orgRole","orgSlug","orgPermissions","__experimental_factorVerificationAge","has","params","useDerivedAuth","authObject","isLoaded","isSignedIn","throw","React","useEmailLink","resource","startEmailLinkFlow","cancelEmailLinkFlow","useMemo","createEmailLinkFlow","useClientContext","eventMethodCalled","useSignIn","_a","client","telemetry","record","signIn","setActive","useClientContext2","eventMethodCalled2","useSignUp","signUp","useClerk","useOrganization","useOrganizationList","useSessionList","useUser","useSession","React3","SessionContext","useSessionContext","React2","withClerk","Component","displayName","HOC","props","clerk","createElement","SignedIn","children","Fragment","SignedOut","ClerkLoaded","ClerkLoading","Protect","fallback","restAuthorizedParams","unauthorized","authorized","condition","role","permission","RedirectToSignIn","hasActiveSessions","activeSessions","length","redirectToAfterSignOut","redirectToSignIn","RedirectToSignUp","redirectToSignUp","RedirectToUserProfile","redirectToUserProfile","RedirectToOrganizationProfile","redirectToOrganizationProfile","RedirectToCreateOrganization","redirectToCreateOrganization","AuthenticateWithRedirectCallback","handleRedirectCallbackParams","handleRedirectCallback","MultisessionAppSupport","key","id"],"sources":["/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/errors/errorThrower.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/useAuth.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/contexts/AuthContext.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/contexts/IsomorphicClerkContext.tsx","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/errors/messages.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/useAssertWrappedByClerkProvider.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/utils.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/useEmailLink.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/useSignIn.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/useSignUp.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/hooks/index.ts","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/components/controlComponents.tsx","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/contexts/SessionContext.tsx","/Users/nethmeeperera/Desktop/my-app/node_modules/@clerk/clerk-react/src/components/withClerk.tsx"],"sourcesContent":["import type { ErrorThrowerOptions } from '@clerk/shared/error';\nimport { buildErrorThrower } from '@clerk/shared/error';\n\nconst errorThrower = buildErrorThrower({ packageName: '@clerk/clerk-react' });\n\nexport { errorThrower };\n\n/**\n * Overrides options of the internal errorThrower (eg setting packageName prefix).\n *\n * @internal\n */\nexport function setErrorThrowerOptions(options: ErrorThrowerOptions) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n","import { createCheckAuthorization } from '@clerk/shared/authorization';\nimport type {\n  ActJWTClaim,\n  CheckAuthorizationWithCustomPermissions,\n  GetToken,\n  OrganizationCustomRoleKey,\n  SignOut,\n} from '@clerk/types';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { errorThrower } from '../errors/errorThrower';\nimport { invalidStateError } from '../errors/messages';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\nimport { createGetToken, createSignOut } from './utils';\n\ntype CheckAuthorizationSignedOut = undefined;\ntype CheckAuthorizationWithoutOrgOrUser = (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => false;\n\ntype UseAuthReturn =\n  | {\n      isLoaded: false;\n      isSignedIn: undefined;\n      userId: undefined;\n      sessionId: undefined;\n      actor: undefined;\n      orgId: undefined;\n      orgRole: undefined;\n      orgSlug: undefined;\n      has: CheckAuthorizationSignedOut;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: false;\n      userId: null;\n      sessionId: null;\n      actor: null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      has: CheckAuthorizationWithoutOrgOrUser;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      has: CheckAuthorizationWithCustomPermissions;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: string;\n      orgRole: OrganizationCustomRoleKey;\n      orgSlug: string | null;\n      has: CheckAuthorizationWithCustomPermissions;\n      signOut: SignOut;\n      getToken: GetToken;\n    };\n\ntype UseAuth = (initialAuthState?: any) => UseAuthReturn;\n\n/**\n * Returns the current auth state, the user and session ids and the `getToken`\n * that can be used to retrieve the given template or the default Clerk token.\n *\n * Until Clerk loads, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access the `userId` and `sessionId` variables.\n *\n * For projects using NextJs or Remix, you can have immediate access to this data during SSR\n * simply by using the `ClerkProvider`.\n *\n * @example\n * A simple example:\n *\n * import { useAuth } from '@clerk/clerk-react'\n *\n * function Hello() {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   if(isSignedIn) {\n *     return null;\n *   }\n *   console.log(sessionId, userId)\n *   return <div>...</div>\n * }\n *\n * @example\n * Basic example in a NextJs app. This page will be fully rendered during SSR:\n *\n * import { useAuth } from '@clerk/nextjs'\n *\n * export HelloPage = () => {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   console.log(isSignedIn, sessionId, userId)\n *   return <div>...</div>\n * }\n */\nexport const useAuth: UseAuth = (initialAuthState = {}) => {\n  useAssertWrappedByClerkProvider('useAuth');\n\n  const authContext = useAuthContext();\n\n  const [authState, setAuthState] = useState(() => {\n    // This indicates the authContext is not available, and so we fallback to the provided initialState\n    if (authContext.sessionId === undefined && authContext.userId === undefined) {\n      return initialAuthState ?? {};\n    }\n    return authContext;\n  });\n\n  useEffect(() => {\n    if (authContext.sessionId === undefined && authContext.userId === undefined) {\n      return;\n    }\n    setAuthState(authContext);\n  }, [authContext]);\n\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions, __experimental_factorVerificationAge } =\n    authState;\n  const isomorphicClerk = useIsomorphicClerkContext();\n\n  const getToken: GetToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut: SignOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n\n  const has = useCallback(\n    (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => {\n      return createCheckAuthorization({\n        userId,\n        orgId,\n        orgRole,\n        orgPermissions,\n        __experimental_factorVerificationAge,\n      })(params);\n    },\n    [userId, __experimental_factorVerificationAge, orgId, orgRole, orgPermissions],\n  );\n\n  return useDerivedAuth({ sessionId, userId, actor, orgId, orgSlug, orgRole, getToken, signOut, has });\n};\n\nexport function useDerivedAuth(authObject: any): UseAuthReturn {\n  const { sessionId, userId, actor, orgId, orgSlug, orgRole, has, signOut, getToken } = authObject ?? {};\n\n  if (sessionId === undefined && userId === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      sessionId,\n      userId,\n      actor: undefined,\n      orgId: undefined,\n      orgRole: undefined,\n      orgSlug: undefined,\n      has: undefined,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has,\n      signOut,\n      getToken,\n    };\n  }\n\n  return errorThrower.throw(invalidStateError);\n}\n","import { createContextAndHook } from '@clerk/shared/react';\nimport type { ActJWTClaim, OrganizationCustomPermissionKey, OrganizationCustomRoleKey } from '@clerk/types';\n\nexport type AuthContextValue = {\n  userId: string | null | undefined;\n  sessionId: string | null | undefined;\n  actor: ActJWTClaim | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: OrganizationCustomRoleKey | null | undefined;\n  orgSlug: string | null | undefined;\n  orgPermissions: OrganizationCustomPermissionKey[] | null | undefined;\n  __experimental_factorVerificationAge: [number, number] | null;\n};\n\nexport const [AuthContext, useAuthContext] = createContextAndHook<AuthContextValue>('AuthContext');\n","import { ClerkInstanceContext, useClerkInstanceContext } from '@clerk/shared/react';\n\nimport type { IsomorphicClerk } from '../isomorphicClerk';\n\nexport const IsomorphicClerkContext = ClerkInstanceContext;\nexport const useIsomorphicClerkContext = useClerkInstanceContext as unknown as () => IsomorphicClerk;\n","export const noClerkProviderError = 'You must wrap your application in a <ClerkProvider> component.';\n\nexport const multipleClerkProvidersError =\n  \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nexport const hocChildrenNotAFunctionError = 'Child of WithClerk must be a function.';\n\nexport const multipleChildrenInButtonComponent = (name: string) =>\n  `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nexport const invalidStateError =\n  'Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support';\n\nexport const unsupportedNonBrowserDomainOrProxyUrlFunction =\n  'Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.';\n\nexport const userProfilePageRenderedError =\n  '<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\nexport const userProfileLinkRenderedError =\n  '<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\n\nexport const organizationProfilePageRenderedError =\n  '<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\nexport const organizationProfileLinkRenderedError =\n  '<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\n\nexport const customPagesIgnoredComponent = (componentName: string) =>\n  `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\n\nexport const customPageWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\n\nexport const customLinkWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\n\nexport const useAuthHasRequiresRoleOrPermission =\n  'Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`';\n\nexport const noPathProvidedError = (componentName: string) =>\n  `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\n\nexport const incompatibleRoutingWithPathProvidedError = (componentName: string) =>\n  `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\n\nexport const userButtonIgnoredComponent = `<UserButton /> can only accept <UserButton.UserProfilePage />, <UserButton.UserProfileLink /> and <UserButton.MenuItems /> as its children. Any other provided component will be ignored.`;\n\nexport const customMenuItemsIgnoredComponent =\n  '<UserButton.MenuItems /> component can only accept <UserButton.Action /> and <UserButton.Link /> as its children. Any other provided component will be ignored.';\n\nexport const userButtonMenuItemsRenderedError =\n  '<UserButton.MenuItems /> component needs to be a direct child of `<UserButton />`.';\n\nexport const userButtonMenuActionRenderedError =\n  '<UserButton.Action /> component needs to be a direct child of `<UserButton.MenuItems />`.';\n\nexport const userButtonMenuLinkRenderedError =\n  '<UserButton.Link /> component needs to be a direct child of `<UserButton.MenuItems />`.';\n\nexport const userButtonMenuItemLinkWrongProps =\n  'Missing props. <UserButton.Link /> component requires the following props: href, label and labelIcon.';\n\nexport const userButtonMenuItemsActionWrongsProps =\n  'Missing props. <UserButton.Action /> component requires the following props: label.';\n","import { useAssertWrappedByClerkProvider as useSharedAssertWrappedByClerkProvider } from '@clerk/shared/react';\n\nimport { errorThrower } from '../errors/errorThrower';\n\nexport const useAssertWrappedByClerkProvider = (source: string): void => {\n  useSharedAssertWrappedByClerkProvider(() => {\n    errorThrower.throwMissingClerkProviderError({ source });\n  });\n};\n","import type { IsomorphicClerk } from '../isomorphicClerk';\n\n/**\n * @internal\n */\nconst clerkLoaded = (isomorphicClerk: IsomorphicClerk) => {\n  return new Promise<void>(resolve => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\n\n/**\n * @internal\n */\nexport const createGetToken = (isomorphicClerk: IsomorphicClerk) => {\n  return async (options: any) => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\n\n/**\n * @internal\n */\nexport const createSignOut = (isomorphicClerk: IsomorphicClerk) => {\n  return async (...args: any) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n","import type {\n  CreateEmailLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartEmailLinkFlowParams,\n  SignUpResource,\n  StartEmailLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype EmailLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseEmailLinkSignInReturn = CreateEmailLinkFlowReturn<SignInStartEmailLinkFlowParams, SignInResource>;\ntype UseEmailLinkSignUpReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, SignUpResource>;\ntype UseEmailLinkEmailAddressReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, EmailAddressResource>;\n\nfunction useEmailLink(resource: SignInResource): UseEmailLinkSignInReturn;\nfunction useEmailLink(resource: SignUpResource): UseEmailLinkSignUpReturn;\nfunction useEmailLink(resource: EmailAddressResource): UseEmailLinkEmailAddressReturn;\nfunction useEmailLink(\n  resource: EmailLinkable,\n): UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow,\n  } as UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn;\n}\n\nexport { useEmailLink };\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { SetActive, SignInResource } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\ntype UseSignInReturn =\n  | {\n      isLoaded: false;\n      signIn: undefined;\n      setActive: undefined;\n    }\n  | {\n      isLoaded: true;\n      signIn: SignInResource;\n      setActive: SetActive;\n    };\n\ntype UseSignIn = () => UseSignInReturn;\n\nexport const useSignIn: UseSignIn = () => {\n  useAssertWrappedByClerkProvider('useSignIn');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignIn'));\n\n  if (!client) {\n    return { isLoaded: false, signIn: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { SetActive, SignUpResource } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\ntype UseSignUpReturn =\n  | {\n      isLoaded: false;\n      signUp: undefined;\n      setActive: undefined;\n    }\n  | {\n      isLoaded: true;\n      signUp: SignUpResource;\n      setActive: SetActive;\n    };\n\ntype UseSignUp = () => UseSignUpReturn;\n\nexport const useSignUp: UseSignUp = () => {\n  useAssertWrappedByClerkProvider('useSignUp');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignUp'));\n\n  if (!client) {\n    return { isLoaded: false, signUp: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","export { useAuth } from './useAuth';\nexport { useEmailLink } from './useEmailLink';\nexport { useSignIn } from './useSignIn';\nexport { useSignUp } from './useSignUp';\nexport {\n  useClerk,\n  useOrganization,\n  useOrganizationList,\n  useSessionList,\n  useUser,\n  useSession,\n} from '@clerk/shared/react';\n","import type {\n  CheckAuthorizationWithCustomPermissions,\n  HandleOAuthCallbackParams,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { useAuth } from '../hooks';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('SignedIn');\n\n  const { userId } = useAuthContext();\n  if (userId) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('SignedOut');\n\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('ClerkLoaded');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('ClerkLoading');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\nexport type ProtectProps = React.PropsWithChildren<\n  (\n    | {\n        condition?: never;\n        role: OrganizationCustomRoleKey;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission: OrganizationCustomPermissionKey;\n      }\n    | {\n        condition: (has: CheckAuthorizationWithCustomPermissions) => boolean;\n        role?: never;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission?: never;\n      }\n  ) & {\n    fallback?: React.ReactNode;\n  }\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, ...restAuthorizedParams }: ProtectProps) => {\n  useAssertWrappedByClerkProvider('Protect');\n\n  const { isLoaded, has, userId } = useAuth();\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n/* eslint-enable react-hooks/rules-of-hooks */\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>): JSX.Element => {\n  useAssertWrappedByClerkProvider('MultisessionAppSupport');\n\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n","export { SessionContext, useSessionContext } from '@clerk/shared/react';\n","import type { LoadedClerk, Without } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { errorThrower } from '../errors/errorThrower';\nimport { hocChildrenNotAFunctionError } from '../errors/messages';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Without<P, 'clerk'>) => {\n    useAssertWrappedByClerkProvider(displayName || 'withClerk');\n\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded) {\n      return null;\n    }\n\n    return (\n      <Component\n        {...(props as P)}\n        clerk={clerk}\n      />\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => {\n  const clerk = useIsomorphicClerkContext();\n\n  if (typeof children !== 'function') {\n    errorThrower.throw(hocChildrenNotAFunctionError);\n  }\n\n  if (!clerk.loaded) {\n    return null;\n  }\n\n  return <>{children(clerk as unknown as LoadedClerk)}</>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}