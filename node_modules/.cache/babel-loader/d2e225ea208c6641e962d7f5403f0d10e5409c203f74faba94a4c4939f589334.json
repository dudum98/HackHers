{"ast":null,"code":"var _jsxFileName = \"/Users/nethmeeperera/Desktop/my-app/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useClerk } from '@clerk/clerk-react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const {\n    signOut\n  } = useClerk();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isOpen, setIsOpen] = useState(false); // State to control chat box visibility\n\n  const handleSend = async () => {\n    if (!input) return;\n    const newMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput('');\n    try {\n      console.log(\"Sending message:\", input); // Log the input message\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n\n      // Check if the response is okay\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(\"Received response:\", data); // Log the received response\n\n      // Add AI's message to the chat\n      const aiMessage = {\n        role: 'assistant',\n        content: data.reply\n      };\n      setMessages(prevMessages => [...prevMessages, aiMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\uD83D\\uDCAC \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-box ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.role === 'user' ? 'You' : 'AI', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"DO5+rYt/hzcbWiiTyah4KdoCxG8=\", false, function () {\n  return [useClerk];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useClerk","jsxDEV","_jsxDEV","Chat","_s","signOut","input","setInput","messages","setMessages","isOpen","setIsOpen","handleSend","newMessage","role","content","prevMessages","console","log","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","aiMessage","reply","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/nethmeeperera/Desktop/my-app/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useClerk } from '@clerk/clerk-react';\nimport './Chat.css';\n\nfunction Chat() {\n  const { signOut } = useClerk();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isOpen, setIsOpen] = useState(false); // State to control chat box visibility\n\n  const handleSend = async () => {\n    if (!input) return;\n\n    const newMessage = { role: 'user', content: input };\n    setMessages((prevMessages) => [...prevMessages, newMessage]);\n    setInput('');\n\n    try {\n      console.log(\"Sending message:\", input); // Log the input message\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: input }),\n      });\n\n      // Check if the response is okay\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      console.log(\"Received response:\", data); // Log the received response\n\n      // Add AI's message to the chat\n      const aiMessage = { role: 'assistant', content: data.reply };\n      setMessages((prevMessages) => [...prevMessages, aiMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div>\n      {/* Chat icon */}\n      <div className=\"chat-icon\" onClick={() => setIsOpen(!isOpen)}>\n        ðŸ’¬ {/* You can use an actual icon or emoji */}\n      </div>\n\n      {/* Chat box */}\n      <div className={`chat-box ${isOpen ? 'open' : ''}`}>\n        <div className=\"chat-content\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`chat-message ${msg.role}`}>\n              <strong>{msg.role === 'user' ? 'You' : 'AI'}:</strong> {msg.content}\n            </div>\n          ))}\n        </div>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message here...\"\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}