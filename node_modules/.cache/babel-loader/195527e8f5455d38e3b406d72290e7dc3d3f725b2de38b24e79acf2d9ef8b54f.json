{"ast":null,"code":"// Chat.js\nconst handleSend = async () => {\n  if (input.trim()) {\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n\n    // Prepare a prompt for OpenAI with the context for new moms\n    const prompt = `You are a helpful assistant specialized in providing advice and information to new moms. Respond to the following query: \"${input}\"`;\n\n    // Call the OpenAI API with the modified prompt\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: prompt\n      }) // Send the context-specific prompt\n    });\n    const data = await response.json();\n    const botMessage = {\n      text: data.reply,\n      sender: 'bot'\n    };\n    setMessages(prevMessages => [...prevMessages, botMessage]);\n  }\n};","map":{"version":3,"names":["handleSend","input","trim","userMessage","text","sender","setMessages","prevMessages","setInput","prompt","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply"],"sources":["/Users/nethmeeperera/Desktop/my-app/src/Chat.js"],"sourcesContent":["// Chat.js\nconst handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = { text: input, sender: 'user' };\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\n      setInput('');\n  \n      // Prepare a prompt for OpenAI with the context for new moms\n      const prompt = `You are a helpful assistant specialized in providing advice and information to new moms. Respond to the following query: \"${input}\"`;\n  \n      // Call the OpenAI API with the modified prompt\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: prompt }), // Send the context-specific prompt\n      });\n  \n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: 'bot' };\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    }\n  };\n  \n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAIC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;IAChB,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAEH,KAAK;MAAEI,MAAM,EAAE;IAAO,CAAC;IACnDC,WAAW,CAAEC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,WAAW,CAAC,CAAC;IAC7DK,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,MAAMC,MAAM,GAAG,6HAA6HR,KAAK,GAAG;;IAEpJ;IACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAER;MAAO,CAAC,CAAC,CAAE;IAC7C,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG;MAAEhB,IAAI,EAAEc,IAAI,CAACG,KAAK;MAAEhB,MAAM,EAAE;IAAM,CAAC;IACtDC,WAAW,CAAEC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEa,UAAU,CAAC,CAAC;EAC9D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}